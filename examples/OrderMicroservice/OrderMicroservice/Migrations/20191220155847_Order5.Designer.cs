// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderMicroservice.Infrastructure;

namespace OrderMicroservice.Migrations
{
    [DbContext(typeof(OrdersDBContext))]
    [Migration("20191220155847_Order5")]
    partial class Order5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrderMicroservice.Domain.AggregateModel.ItemEntity", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnName("item_id")
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_ts")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("ItemName")
                        .HasColumnName("item_name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnName("item_type")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemName")
                        .IsUnique()
                        .HasFilter("[item_name] IS NOT NULL");

                    b.ToTable("tbl_items");
                });

            modelBuilder.Entity("OrderMicroservice.Domain.AggregateModel.OrderEntity", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedTs")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_ts")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)");

                    b.HasKey("OrderId");

                    b.HasIndex("Username");

                    b.ToTable("tbl_orders");
                });

            modelBuilder.Entity("OrderMicroservice.Domain.AggregateModel.OrderItemEntity", b =>
                {
                    b.Property<string>("OrderItemId")
                        .HasColumnName("order_item_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnName("item_id")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnName("order_id")
                        .HasColumnType("varchar(64)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.ToTable("tbl_order_items");
                });

            modelBuilder.Entity("OrderMicroservice.Domain.AggregateModel.OrderItemEntity", b =>
                {
                    b.HasOne("OrderMicroservice.Domain.AggregateModel.ItemEntity", "ItemEntity")
                        .WithOne()
                        .HasForeignKey("OrderMicroservice.Domain.AggregateModel.OrderItemEntity", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderMicroservice.Domain.AggregateModel.OrderEntity", "OrderEntity")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
