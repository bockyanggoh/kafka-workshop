// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Kafka.Communication.Models
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class CreatePaymentRequest : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""CreatePaymentRequest"",""namespace"":""Kafka.Communication.Models"",""fields"":[{""name"":""RequestType"",""doc"":""Type of Request"",""type"":""string""},{""name"":""CorrelationId"",""doc"":""CorrelationId for this request"",""type"":""string""},{""name"":""OrderId"",""doc"":""Order Id for this order"",""type"":""string""},{""name"":""Username"",""doc"":""Username of requestor"",""type"":""string""},{""name"":""PaymentStatus"",""doc"":""Payment Status for Order"",""type"":""string""},{""name"":""RequestedTs"",""doc"":""Timestamp of Request"",""type"":""string""},{""name"":""CostBreakdown"",""doc"":""Cost Entries"",""type"":{""type"":""array"",""items"":{""type"":""record"",""name"":""ItemCost"",""namespace"":""Kafka.Communication.Models"",""fields"":[{""name"":""ItemId"",""type"":""string""},{""name"":""ItemName"",""type"":""string""},{""name"":""CostPrice"",""type"":""double""}]}}}]}");
		/// <summary>
		/// Type of Request
		/// </summary>
		private string _RequestType;
		/// <summary>
		/// CorrelationId for this request
		/// </summary>
		private string _CorrelationId;
		/// <summary>
		/// Order Id for this order
		/// </summary>
		private string _OrderId;
		/// <summary>
		/// Username of requestor
		/// </summary>
		private string _Username;
		/// <summary>
		/// Payment Status for Order
		/// </summary>
		private string _PaymentStatus;
		/// <summary>
		/// Timestamp of Request
		/// </summary>
		private string _RequestedTs;
		/// <summary>
		/// Cost Entries
		/// </summary>
		private IList<Kafka.Communication.Models.ItemCost> _CostBreakdown;
		public virtual Schema Schema
		{
			get
			{
				return CreatePaymentRequest._SCHEMA;
			}
		}
		/// <summary>
		/// Type of Request
		/// </summary>
		public string RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				this._RequestType = value;
			}
		}
		/// <summary>
		/// CorrelationId for this request
		/// </summary>
		public string CorrelationId
		{
			get
			{
				return this._CorrelationId;
			}
			set
			{
				this._CorrelationId = value;
			}
		}
		/// <summary>
		/// Order Id for this order
		/// </summary>
		public string OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				this._OrderId = value;
			}
		}
		/// <summary>
		/// Username of requestor
		/// </summary>
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				this._Username = value;
			}
		}
		/// <summary>
		/// Payment Status for Order
		/// </summary>
		public string PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				this._PaymentStatus = value;
			}
		}
		/// <summary>
		/// Timestamp of Request
		/// </summary>
		public string RequestedTs
		{
			get
			{
				return this._RequestedTs;
			}
			set
			{
				this._RequestedTs = value;
			}
		}
		/// <summary>
		/// Cost Entries
		/// </summary>
		public IList<Kafka.Communication.Models.ItemCost> CostBreakdown
		{
			get
			{
				return this._CostBreakdown;
			}
			set
			{
				this._CostBreakdown = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.RequestType;
			case 1: return this.CorrelationId;
			case 2: return this.OrderId;
			case 3: return this.Username;
			case 4: return this.PaymentStatus;
			case 5: return this.RequestedTs;
			case 6: return this.CostBreakdown;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.RequestType = (System.String)fieldValue; break;
			case 1: this.CorrelationId = (System.String)fieldValue; break;
			case 2: this.OrderId = (System.String)fieldValue; break;
			case 3: this.Username = (System.String)fieldValue; break;
			case 4: this.PaymentStatus = (System.String)fieldValue; break;
			case 5: this.RequestedTs = (System.String)fieldValue; break;
			case 6: this.CostBreakdown = (IList<Kafka.Communication.Models.ItemCost>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
